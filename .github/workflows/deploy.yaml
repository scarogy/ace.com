name: Deploy WordPress to EKS

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: us-east-1
  EKS_CLUSTER_NAME: eks-dev
  ECR_REPOSITORY: ecommerce

jobs:
  sync-and-deploy:
    name: Sync Image and Deploy
    runs-on: ubuntu-latest
    
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Pull Bitnami image and push to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Pull official Bitnami WordPress
          docker pull public.ecr.aws/bitnami/wordpress:6.6.2-debian-12-r9
          
          # Tag it for your ECR
          docker tag public.ecr.aws/bitnami/wordpress:6.6.2-debian-12-r9 \
            $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          
          docker tag public.ecr.aws/bitnami/wordpress:6.6.2-debian-12-r9 \
            $ECR_REGISTRY/$ECR_REPOSITORY:latest
          
          # Push to your ECR
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          
          echo "✅ Image pushed to ECR"

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.0'

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig \
            --region ${{ env.AWS_REGION }} \
            --name ${{ env.EKS_CLUSTER_NAME }}

      - name: Deploy to EKS
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          helm upgrade wordpress bitnami/wordpress \
          -n ecommerce \
            --reuse-values \
            --set image.registry=$ECR_REGISTRY \
            --set image.repository=$ECR_REPOSITORY \
            --set image.tag=$IMAGE_TAG \
            --wait \
            --timeout 10m

          # echo "Deploying image: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          
          # kubectl set image deployment/wordpress \
          #   wordpress=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
          #   -n ecommerce
          
          # kubectl rollout status deployment/wordpress \
          #   -n ecommerce \
          #   --timeout=10m
          
          echo "✅ Deployment successful!"